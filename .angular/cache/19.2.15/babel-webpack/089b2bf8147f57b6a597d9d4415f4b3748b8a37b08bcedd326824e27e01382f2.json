{"ast":null,"code":"import { shareReplay } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../auth.service\";\nexport let EnquiryFormService = /*#__PURE__*/(() => {\n  class EnquiryFormService {\n    constructor(http, authService) {\n      this.http = http;\n      this.authService = authService;\n      this.apiUrl = `${environment.apiUrl}/customer`;\n    }\n    /**\n     * Submit customer enquiry data to the API\n     * @param customerData - The customer enquiry data\n     * @returns Observable of the API response\n     */\n    submitCustomerEnquiry(customerData) {\n      return this.http.post(this.apiUrl, customerData);\n    }\n    /**\n     * Get all customer enquiries (if needed for future use)\n     * @returns Observable of customer enquiries array\n     */\n    getCustomerEnquiries() {\n      return this.http.get(this.apiUrl);\n    }\n    /**\n     * Get a specific customer enquiry by ID (if needed for future use)\n     * @param id - Customer enquiry ID\n     * @returns Observable of customer enquiry\n     */\n    getCustomerEnquiryById(id) {\n      return this.http.get(`${this.apiUrl}/${id}`);\n    }\n    getPendingCustomers() {\n      return this.http.get(`${this.apiUrl}/customers/pending`).pipe(shareReplay(1));\n    }\n    getCustomerById(id) {\n      return this.http.get(`${this.apiUrl}/customers/${id}`);\n    }\n    getCustomerByMobile(mobileNumber) {\n      return this.http.get(`${this.apiUrl}/mobile/${mobileNumber}`);\n    }\n    updateCustomer(id, payload) {\n      return this.http.put(`${this.apiUrl}/${id}`, payload);\n    }\n    static {\n      this.ɵfac = function EnquiryFormService_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || EnquiryFormService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: EnquiryFormService,\n        factory: EnquiryFormService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return EnquiryFormService;\n})();","map":{"version":3,"names":["shareReplay","environment","EnquiryFormService","constructor","http","authService","apiUrl","submitCustomerEnquiry","customerData","post","getCustomerEnquiries","get","getCustomerEnquiryById","id","getPendingCustomers","pipe","getCustomerById","getCustomerByMobile","mobileNumber","updateCustomer","payload","put","i0","ɵɵinject","i1","HttpClient","i2","AuthService","factory","ɵfac","providedIn"],"sources":["C:\\Atul\\SurveyPopupIntegration\\surveyPopupFE\\CMS\\src\\app\\enquiry-form\\enquiry-form.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { AuthService } from '../auth.service';\r\nimport { shareReplay } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\n\r\nexport interface CustomerEnquiry {\r\n  id?: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  mobile: string;\r\n  address: string;\r\n  age: number;\r\n  incomeSource: string;\r\n  income: number;\r\n  budget: number;\r\n  reference: string;\r\n  referencePerson?: string;\r\n  propertyInterests: {\r\n    [key: string]: boolean;\r\n  };\r\n  status?: string;\r\n  submittedAt?: string;\r\n  remarks: {\r\n    remark: string;\r\n    attendedBy: string;\r\n    visitDate: string;\r\n  }[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EnquiryFormService {\r\n  private apiUrl = `${environment.apiUrl}/customer`;\r\n\r\n  constructor(private http: HttpClient, private authService: AuthService) { }\r\n\r\n  /**\r\n   * Submit customer enquiry data to the API\r\n   * @param customerData - The customer enquiry data\r\n   * @returns Observable of the API response\r\n   */\r\n  submitCustomerEnquiry(customerData: CustomerEnquiry): Observable<any> {\r\n    return this.http.post(this.apiUrl, customerData);\r\n  }\r\n\r\n  /**\r\n   * Get all customer enquiries (if needed for future use)\r\n   * @returns Observable of customer enquiries array\r\n   */\r\n  getCustomerEnquiries(): Observable<CustomerEnquiry[]> {\r\n    return this.http.get<CustomerEnquiry[]>(this.apiUrl);\r\n  }\r\n\r\n  /**\r\n   * Get a specific customer enquiry by ID (if needed for future use)\r\n   * @param id - Customer enquiry ID\r\n   * @returns Observable of customer enquiry\r\n   */\r\n  getCustomerEnquiryById(id: string): Observable<CustomerEnquiry> {\r\n    return this.http.get<CustomerEnquiry>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  getPendingCustomers(): Observable<CustomerEnquiry[]> {\r\n    return this.http.get<CustomerEnquiry[]>(`${this.apiUrl}/customers/pending`).pipe(\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  getCustomerById(id: string): Observable<CustomerEnquiry> {\r\n    return this.http.get<CustomerEnquiry>(`${this.apiUrl}/customers/${id}`);\r\n  }\r\n\r\n  getCustomerByMobile(mobileNumber: string): Observable<CustomerEnquiry> {\r\n    return this.http.get<CustomerEnquiry>(`${this.apiUrl}/mobile/${mobileNumber}`);\r\n  }\r\n\r\n  updateCustomer(id: string, payload: any) {\r\n    return this.http.put(`${this.apiUrl}/${id}`, payload);\r\n  }\r\n} "],"mappings":"AAIA,SAASA,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,WAAW,QAAQ,gCAAgC;;;;AA8B5D,WAAaC,kBAAkB;EAAzB,MAAOA,kBAAkB;IAG7BC,YAAoBC,IAAgB,EAAUC,WAAwB;MAAlD,KAAAD,IAAI,GAAJA,IAAI;MAAsB,KAAAC,WAAW,GAAXA,WAAW;MAFjD,KAAAC,MAAM,GAAG,GAAGL,WAAW,CAACK,MAAM,WAAW;IAEyB;IAE1E;;;;;IAKAC,qBAAqBA,CAACC,YAA6B;MACjD,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,IAAI,CAACH,MAAM,EAAEE,YAAY,CAAC;IAClD;IAEA;;;;IAIAE,oBAAoBA,CAAA;MAClB,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAoB,IAAI,CAACL,MAAM,CAAC;IACtD;IAEA;;;;;IAKAM,sBAAsBA,CAACC,EAAU;MAC/B,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAkB,GAAG,IAAI,CAACL,MAAM,IAAIO,EAAE,EAAE,CAAC;IAC/D;IAEAC,mBAAmBA,CAAA;MACjB,OAAO,IAAI,CAACV,IAAI,CAACO,GAAG,CAAoB,GAAG,IAAI,CAACL,MAAM,oBAAoB,CAAC,CAACS,IAAI,CAC9Ef,WAAW,CAAC,CAAC,CAAC,CACf;IACH;IAEAgB,eAAeA,CAACH,EAAU;MACxB,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAkB,GAAG,IAAI,CAACL,MAAM,cAAcO,EAAE,EAAE,CAAC;IACzE;IAEAI,mBAAmBA,CAACC,YAAoB;MACtC,OAAO,IAAI,CAACd,IAAI,CAACO,GAAG,CAAkB,GAAG,IAAI,CAACL,MAAM,WAAWY,YAAY,EAAE,CAAC;IAChF;IAEAC,cAAcA,CAACN,EAAU,EAAEO,OAAY;MACrC,OAAO,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAAC,GAAG,IAAI,CAACf,MAAM,IAAIO,EAAE,EAAE,EAAEO,OAAO,CAAC;IACvD;;;yCA/CWlB,kBAAkB,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;MAAA;IAAA;;;eAAlBzB,kBAAkB;QAAA0B,OAAA,EAAlB1B,kBAAkB,CAAA2B,IAAA;QAAAC,UAAA,EAFjB;MAAM;IAAA;;SAEP5B,kBAAkB;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}