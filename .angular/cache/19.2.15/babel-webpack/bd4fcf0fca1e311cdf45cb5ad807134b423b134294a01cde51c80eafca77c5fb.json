{"ast":null,"code":"import { HttpErrorResponse } from '@angular/common/http';\nimport { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { BehaviorSubject, throwError } from 'rxjs';\nimport { catchError, switchMap, filter, take } from 'rxjs/operators';\nimport { environment } from '../environments/environment';\nlet isRefreshing = false;\nconst refreshTokenSubject = new BehaviorSubject(null);\nconst addTokenHeader = (req, token) => {\n  return req.clone({\n    setHeaders: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const authInterceptor = (req, next) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  const authToken = authService.getToken();\n  // Exclude login and register requests\n  if (req.url.includes(`${environment.apiUrl}/auth/login`) || req.url.includes(`${environment.apiUrl}/auth/register`)) {\n    return next(req);\n  }\n  if (authToken) {\n    req = addTokenHeader(req, authToken);\n  }\n  return next(req).pipe(catchError(error => {\n    if (error instanceof HttpErrorResponse && error.status === 401 && error.error?.message === 'Token has expired') {\n      if (!isRefreshing) {\n        isRefreshing = true;\n        refreshTokenSubject.next(null);\n        return authService.refreshToken().pipe(switchMap(token => {\n          isRefreshing = false;\n          refreshTokenSubject.next(token.accessToken);\n          return next(addTokenHeader(req, token.accessToken));\n        }), catchError(err => {\n          isRefreshing = false;\n          if (err instanceof HttpErrorResponse && err.status === 403) {\n            authService.logout();\n            router.navigate(['/login']);\n          }\n          return throwError(() => err);\n        }));\n      } else {\n        return refreshTokenSubject.pipe(filter(token => token != null), take(1), switchMap(jwt => next(addTokenHeader(req, jwt))));\n      }\n    }\n    return throwError(() => error);\n  }));\n};","map":{"version":3,"names":["HttpErrorResponse","inject","Router","AuthService","BehaviorSubject","throwError","catchError","switchMap","filter","take","environment","isRefreshing","refreshTokenSubject","addTokenHeader","req","token","clone","setHeaders","Authorization","authInterceptor","next","authService","router","authToken","getToken","url","includes","apiUrl","pipe","error","status","message","refreshToken","accessToken","err","logout","navigate","jwt"],"sources":["C:\\Atul\\SurveyPopupIntegration\\surveyPopupFE\\CMS\\src\\app\\auth.interceptor.ts"],"sourcesContent":["import {\r\n  HttpErrorResponse,\r\n  HttpHandlerFn,\r\n  HttpInterceptorFn,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\nimport { BehaviorSubject, throwError } from 'rxjs';\r\nimport { catchError, switchMap, filter, take } from 'rxjs/operators';\r\nimport { environment } from '../environments/environment';\r\n\r\nlet isRefreshing = false;\r\nconst refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\r\n\r\nconst addTokenHeader = (req: HttpRequest<any>, token: string) => {\r\n  return req.clone({\r\n    setHeaders: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const authInterceptor: HttpInterceptorFn = (\r\n  req: HttpRequest<any>,\r\n  next: HttpHandlerFn\r\n) => {\r\n  const authService = inject(AuthService);\r\n  const router = inject(Router);\r\n  const authToken = authService.getToken();\r\n\r\n  // Exclude login and register requests\r\n  if (req.url.includes(`${environment.apiUrl}/auth/login`) || req.url.includes(`${environment.apiUrl}/auth/register`)) {\r\n    return next(req);\r\n  }\r\n\r\n  if (authToken) {\r\n    req = addTokenHeader(req, authToken);\r\n  }\r\n\r\n  return next(req).pipe(\r\n    catchError((error) => {\r\n      if (\r\n        error instanceof HttpErrorResponse &&\r\n        error.status === 401 &&\r\n        error.error?.message === 'Token has expired'\r\n      ) {\r\n        if (!isRefreshing) {\r\n          isRefreshing = true;\r\n          refreshTokenSubject.next(null);\r\n\r\n          return authService.refreshToken().pipe(\r\n            switchMap((token: any) => {\r\n              isRefreshing = false;\r\n              refreshTokenSubject.next(token.accessToken);\r\n              return next(addTokenHeader(req, token.accessToken));\r\n            }),\r\n            catchError((err) => {\r\n              isRefreshing = false;\r\n              if (err instanceof HttpErrorResponse && err.status === 403) {\r\n                authService.logout();\r\n                router.navigate(['/login']);\r\n              }\r\n              return throwError(() => err);\r\n            })\r\n          );\r\n        } else {\r\n          return refreshTokenSubject.pipe(\r\n            filter((token) => token != null),\r\n            take(1),\r\n            switchMap((jwt) => next(addTokenHeader(req, jwt)))\r\n          );\r\n        }\r\n      }\r\n\r\n      return throwError(() => error);\r\n    })\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}