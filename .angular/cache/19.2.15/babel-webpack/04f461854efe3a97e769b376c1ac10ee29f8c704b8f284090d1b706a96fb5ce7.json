{"ast":null,"code":"import _asyncToGenerator from \"C:/Atul/SurveyPopupIntegration/surveyPopupFE/CMS/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { appConfig } from './app/app.config';\nimport { AppComponent } from './app/app.component';\nimport { createCustomElement } from '@angular/elements';\nimport 'zone.js';\n// Convert the Angular component to a custom element\nconst createSurveyPopupElement = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      console.log('Starting Angular Elements initialization...');\n      const appRef = yield bootstrapApplication(AppComponent, appConfig);\n      console.log('Angular application bootstrapped successfully');\n      const injector = appRef.injector;\n      console.log('Injector obtained from app reference');\n      const SurveyPopupElement = createCustomElement(AppComponent, {\n        injector\n      });\n      console.log('Custom element created successfully');\n      // Define the custom element\n      if (!customElements.get('survey-popup-widget')) {\n        customElements.define('survey-popup-widget', SurveyPopupElement);\n        console.log('Survey popup widget registered successfully');\n      } else {\n        console.log('Survey popup widget already registered');\n      }\n      return appRef;\n    } catch (error) {\n      console.error('Error during Angular Elements initialization:', error);\n      console.error('Error details:', {\n        name: error?.name,\n        message: error?.message,\n        stack: error?.stack\n      });\n      throw error;\n    }\n  });\n  return function createSurveyPopupElement() {\n    return _ref.apply(this, arguments);\n  };\n}();\n// Initialize the custom element when DOM is ready\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', () => {\n    createSurveyPopupElement().catch(err => console.error('Failed to create survey popup element:', err));\n  });\n} else {\n  createSurveyPopupElement().catch(err => console.error('Failed to create survey popup element:', err));\n}","map":{"version":3,"names":["bootstrapApplication","appConfig","AppComponent","createCustomElement","createSurveyPopupElement","_ref","_asyncToGenerator","console","log","appRef","injector","SurveyPopupElement","customElements","get","define","error","name","message","stack","apply","arguments","document","readyState","addEventListener","catch","err"],"sources":["C:\\Atul\\SurveyPopupIntegration\\surveyPopupFE\\CMS\\src\\main.ts"],"sourcesContent":["import { bootstrapApplication } from '@angular/platform-browser';\r\nimport { appConfig } from './app/app.config';\r\nimport { AppComponent } from './app/app.component';\r\nimport { createCustomElement } from '@angular/elements';\r\nimport 'zone.js';\r\n\r\n// Convert the Angular component to a custom element\r\nconst createSurveyPopupElement = async () => {\r\n  try {\r\n    console.log('Starting Angular Elements initialization...');\r\n    \r\n    const appRef = await bootstrapApplication(AppComponent, appConfig);\r\n    console.log('Angular application bootstrapped successfully');\r\n    \r\n    const injector = appRef.injector;\r\n    console.log('Injector obtained from app reference');\r\n    \r\n    const SurveyPopupElement = createCustomElement(AppComponent, { injector });\r\n    console.log('Custom element created successfully');\r\n    \r\n    // Define the custom element\r\n    if (!customElements.get('survey-popup-widget')) {\r\n      customElements.define('survey-popup-widget', SurveyPopupElement);\r\n      console.log('Survey popup widget registered successfully');\r\n    } else {\r\n      console.log('Survey popup widget already registered');\r\n    }\r\n    \r\n    return appRef;\r\n  } catch (error: any) {\r\n    console.error('Error during Angular Elements initialization:', error);\r\n    console.error('Error details:', {\r\n      name: error?.name,\r\n      message: error?.message,\r\n      stack: error?.stack\r\n    });\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Initialize the custom element when DOM is ready\r\nif (document.readyState === 'loading') {\r\n  document.addEventListener('DOMContentLoaded', () => {\r\n    createSurveyPopupElement()\r\n      .catch((err) => console.error('Failed to create survey popup element:', err));\r\n  });\r\n} else {\r\n  createSurveyPopupElement()\r\n    .catch((err) => console.error('Failed to create survey popup element:', err));\r\n}\r\n"],"mappings":";AAAA,SAASA,oBAAoB,QAAQ,2BAA2B;AAChE,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,YAAY,QAAQ,qBAAqB;AAClD,SAASC,mBAAmB,QAAQ,mBAAmB;AACvD,OAAO,SAAS;AAEhB;AACA,MAAMC,wBAAwB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAW;IAC1C,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;MAE1D,MAAMC,MAAM,SAAST,oBAAoB,CAACE,YAAY,EAAED,SAAS,CAAC;MAClEM,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;MAE5D,MAAME,QAAQ,GAAGD,MAAM,CAACC,QAAQ;MAChCH,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;MAEnD,MAAMG,kBAAkB,GAAGR,mBAAmB,CAACD,YAAY,EAAE;QAAEQ;MAAQ,CAAE,CAAC;MAC1EH,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MAElD;MACA,IAAI,CAACI,cAAc,CAACC,GAAG,CAAC,qBAAqB,CAAC,EAAE;QAC9CD,cAAc,CAACE,MAAM,CAAC,qBAAqB,EAAEH,kBAAkB,CAAC;QAChEJ,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;MAC5D,CAAC,MAAM;QACLD,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;MACvD;MAEA,OAAOC,MAAM;IACf,CAAC,CAAC,OAAOM,KAAU,EAAE;MACnBR,OAAO,CAACQ,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;MACrER,OAAO,CAACQ,KAAK,CAAC,gBAAgB,EAAE;QAC9BC,IAAI,EAAED,KAAK,EAAEC,IAAI;QACjBC,OAAO,EAAEF,KAAK,EAAEE,OAAO;QACvBC,KAAK,EAAEH,KAAK,EAAEG;OACf,CAAC;MACF,MAAMH,KAAK;IACb;EACF,CAAC;EAAA,gBA/BKX,wBAAwBA,CAAA;IAAA,OAAAC,IAAA,CAAAc,KAAA,OAAAC,SAAA;EAAA;AAAA,GA+B7B;AAED;AACA,IAAIC,QAAQ,CAACC,UAAU,KAAK,SAAS,EAAE;EACrCD,QAAQ,CAACE,gBAAgB,CAAC,kBAAkB,EAAE,MAAK;IACjDnB,wBAAwB,EAAE,CACvBoB,KAAK,CAAEC,GAAG,IAAKlB,OAAO,CAACQ,KAAK,CAAC,wCAAwC,EAAEU,GAAG,CAAC,CAAC;EACjF,CAAC,CAAC;AACJ,CAAC,MAAM;EACLrB,wBAAwB,EAAE,CACvBoB,KAAK,CAAEC,GAAG,IAAKlB,OAAO,CAACQ,KAAK,CAAC,wCAAwC,EAAEU,GAAG,CAAC,CAAC;AACjF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}