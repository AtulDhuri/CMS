{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(auth, router) {\n      this.auth = auth;\n      this.router = router;\n    }\n    canActivate() {\n      if (this.auth.getToken()) {\n        return true;\n      }\n      this.router.navigate(['/login']);\n      return false;\n    }\n    static {\n      this.ɵfac = function AuthGuard_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthGuard,\n        factory: AuthGuard.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthGuard;\n})();","map":{"version":3,"names":["AuthGuard","constructor","auth","router","canActivate","getToken","navigate","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Atul\\SurveyPopupIntegration\\surveyPopupFE\\CMS\\src\\app\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private auth: AuthService, private router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    if (this.auth.getToken()) {\r\n      return true;\r\n    }\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n} "],"mappings":";;;AAKA,WAAaA,SAAS;EAAhB,MAAOA,SAAS;IACpBC,YAAoBC,IAAiB,EAAUC,MAAc;MAAzC,KAAAD,IAAI,GAAJA,IAAI;MAAuB,KAAAC,MAAM,GAANA,MAAM;IAAW;IAEhEC,WAAWA,CAAA;MACT,IAAI,IAAI,CAACF,IAAI,CAACG,QAAQ,EAAE,EAAE;QACxB,OAAO,IAAI;MACb;MACA,IAAI,CAACF,MAAM,CAACG,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK;IACd;;;yCATWN,SAAS,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;MAAA;IAAA;;;eAATZ,SAAS;QAAAa,OAAA,EAATb,SAAS,CAAAc,IAAA;QAAAC,UAAA,EADI;MAAM;IAAA;;SACnBf,SAAS;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}